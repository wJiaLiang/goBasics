package main

import "fmt"

func main()  {
	/*
		go 函数特点:
			1、无需声明原型。
			2、支持不定 变参。
			3、支持多返回值。
			4、支持命名返回参数。
			5、支持匿名函数和闭包。
			6、函数也是一种类型，一个函数可以赋值给变量。

			7、不支持 嵌套 (nested) 一个包不能有两个名字一样的函数。
			8、不支持 重载 (overload)
			9、不支持 默认参数 (default parameter)。


		函数声明：
			1、函数声明包含一个函数名，参数列表， 返回值列表和函数体。如果函数没有返回值，则返回列表可以省略。
			2、函数从第一条语句开始执行，直到执行return语句或者执行函数的最后一条语句。
			3、函数可以没有参数或接受多个参数。参数变量后面跟类型
			4、当两个或多个连续的函数命名参数是同一类型，则除了最后一个类型之外，其他都可以省略。
			5、函数可以返回任意数量的返回值。
			6、使用关键字 func 定义函数，左大括号依旧不能另起一行。

	*/

	//函数是第一类对象，可作为参数传递。建议将复杂签名定义为函数类型，
	vlaues,vlaues2 := test(2,1,"6")
	fmt.Println(vlaues,vlaues2)
}

	// 类型相同的相邻参数，参数类型可合并。 单值可以不用括号(也可指定返回值 变量名)  多返回值必须用括号。
	func test(x, y int, s string) (int, string) {
		n := x + y
		return n, fmt.Sprintf("%s,%s",s, n)
	}