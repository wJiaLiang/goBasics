package main

import "fmt"

func main()  {
/*
	一、Go 语言里的字符串的内部实现使用 UTF-8 编码。 字符串的值 为双引号(")中的内容，可以在 Go 语言的源码中直接添加非 ASCII 码字符，
   		len函数可以返回一个字符串中的字节数目（不是rune字符数目），索引操作s[i]返回第i个字节的字节值，i必须满足0 ≤ i< len(s)条件约束。
		第i个字节并不一定是字符串的第i个字符，因为对于非ASCII字符的UTF8编码会要两个或多个字节。

	二、字符串转义符
		\r 	回车符（返回行首）
		\n 	换行符（直接跳到下一行的同列位置）
		\t 	制表符
		\' 	单引号
		\" 	双引号
		\\ 	反斜杠

	三、子字符串操作s[i:j]基于原始的s字符串的第i个字节开始到第j个字节（并不包含j本身）生成一个新字符串。生成的新字符串将包含j-i个字节。

	四、因为字符串是不可修改的，因此尝试修改字符串内部数据的操作也是被禁止的：
		s[0] = 'L'   // 不允许


*/

	a1()

}

func a1()  {
	s := "hello, world"

	var st = s[2:5]
	fmt.Println(st)  // llo






}